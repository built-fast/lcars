#!/usr/bin/env bash
# Usage: lcars cli:aliases
# Summary: Lists all LCARS aliases
#
# NAME
#   lcars cli:aliases -- List all LCARS aliases
#
# SYNOPSIS
#   lcars cli:aliases
#
# DESCRIPTION
#   lcars cli:aliases lists all LCARS aliases.

if [[ "$LCARS_DEBUG" ]]; then
  export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}()}] '
  set -x
fi

if [[ -z "$_LCARS_ROOT" ]]; then
  echo "Error: Must run \`${0//*\/lcars-/lcars }' instead."
  exit 1
fi

set -euo pipefail

COMMAND_PREFIX="lcars-"

list_aliases() {
  local PATH_remain path lcars_command

  shopt -s nullglob

  {
    PATH_remain="$PATH"

    while true; do
      path="${PATH_remain%%:*}"

      if [[ -n "$path" ]]; then
        for lcars_command in "$path/$COMMAND_PREFIX"*; do
          if [[ -L "$lcars_command" ]]; then
            echo "$lcars_command"
          fi
        done
      fi

      [[ $PATH_remain == *:* ]] || break

      PATH_remain="${PATH_remain#*:}"
    done
  } | sort | uniq

  shopt -u nullglob
}

main() {
  local file command target is_tty=no

  [[ -t 1 ]] && is_tty=yes

  {
    if [[ "$is_tty" = yes ]]; then
      printf "Command\\tTarget\\n"
    fi

    while IFS= read -r file; do
      target=$(readlink -f "$file")
      target="${target##*/"$COMMAND_PREFIX"}"
      command="${file##*/"$COMMAND_PREFIX"}"

      printf "%s\\t%s\\n" "$command" "$target"
    done < <(list_aliases) | sort
  } | {
    if [[ "$is_tty" = yes ]]; then
      lcars-util:tableize --tsv
    else
      column -s$'\t' -t
    fi
  }
}

main "$@"
